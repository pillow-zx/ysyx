#***************************************************************************************
# Copyright (c) 2014-2024 Zihao Yu, Nanjing University
#
# NEMU is licensed under Mulan PSL v2.
# You can use this software according to the terms and conditions of the Mulan PSL v2.
# You may obtain a copy of Mulan PSL v2 at:
#          http://license.coscl.org.cn/MulanPSL2
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
#
# See the Mulan PSL v2 for more details.
#**************************************************************************************/

# Sanity check	检查nemu-main.c是否存在
ifeq ($(wildcard $(NEMU_HOME)/src/nemu-main.c),)
	$(error NEMU_HOME=$(NEMU_HOME) is not a NEMU repo)
endif

# Include variables and rules generated by menuconfig
# include有menuconfig生成的变量和规则
-include $(NEMU_HOME)/include/config/auto.conf
-include $(NEMU_HOME)/include/config/auto.conf.cmd

# NEMU include常见变量和规则, 移除引号,提取变量
remove_quote = $(patsubst "%",%,$(1))

# Extract variabls from menuconfig
# 从menuconfig中提取变量, call函数用于调用remove_quote函数
# GUEST_ISA是ISA的配置, 例如x86, riscv等
# ENGINE是引擎的配置, 例如native, am等
# NAME是NEMU的名称, 由GUEST_ISA和ENGINE组成
GUEST_ISA ?= $(call remove_quote,$(CONFIG_ISA))
ENGINE ?= $(call remove_quote,$(CONFIG_ENGINE))
NAME    = $(GUEST_ISA)-nemu-$(ENGINE)

# Include all filelist.mk to merge file lists
# 将所有的filelist.mk包含进来, 以便合并文件列表
FILELIST_MK = $(shell find -L ./src -name "filelist.mk")
include $(FILELIST_MK)

# Filter out directories and files in blacklist to obtain the final set of source files
# 过滤掉黑名单中的目录和文件, 以获得最终的源文件集
# DIRS-BLACKLIST-y是黑名单目录, SRCS-BLACKLIST-y是黑名单源文件
# SRCS-y是所有源文件, SRCS是最终的源文件集
DIRS-BLACKLIST-y += $(DIRS-BLACKLIST)
SRCS-BLACKLIST-y += $(SRCS-BLACKLIST) $(shell find -L $(DIRS-BLACKLIST-y) -name "*.c")
SRCS-y += $(shell find -L $(DIRS-y) -name "*.c")
SRCS = $(filter-out $(SRCS-BLACKLIST-y),$(SRCS-y))

# Extract compiler and options from menuconfig
# CONFIG_CC是编译器的配置, CONFIG_CC_OPT是编译选项,
# CONFIG_CC_LTO是链接时优化的配置, CONFIG_CC_DEBUG是调试选
# CONFIG_CC_ASAN是地址消毒的配置, CONFIG_ITRACE_COND是条件追踪的配置
# CFLAGS_BUILD是编译选项, CFLAGS_TRACE是追踪选项,
# CFLAGS是最终的编译选项, LDFLAGS是链接选项
# if用于判断变量是否存在, 如果存在则使用其值, 否则使用默认值
ifneq ($(CONFIG_CC),)
CC = $(call remove_quote,$(CONFIG_CC))
endif
CFLAGS_BUILD += $(call remove_quote,$(CONFIG_CC_OPT))
CFLAGS_BUILD += $(if $(CONFIG_CC_LTO),-flto,)
CFLAGS_BUILD += $(if $(CONFIG_CC_DEBUG),-Og -ggdb3,)
CFLAGS_BUILD += $(if $(CONFIG_CC_ASAN),-fsanitize=address,)
CFLAGS_TRACE += -DITRACE_COND=$(if $(CONFIG_ITRACE_COND),$(call remove_quote,$(CONFIG_ITRACE_COND)),true)
CFLAGS  += $(CFLAGS_BUILD) $(CFLAGS_TRACE) -D__GUEST_ISA__=$(GUEST_ISA)
LDFLAGS += $(CFLAGS_BUILD)

# Include rules for menuconfig
# 包含menuconfig的规则
include $(NEMU_HOME)/scripts/config.mk

# 如果CONFIG_TARGET_AM存在, 则包含AM的Makefile, 否则包含NEMU的构建规则
ifdef CONFIG_TARGET_AM
include $(AM_HOME)/Makefile
LINKAGE += $(ARCHIVES)
else
# Include rules to build NEMU # 包含构建NEMU的规则
include $(NEMU_HOME)/scripts/native.mk
endif
